import { createContext, useState, useRef, ReactNode } from 'react';

type Language = 'en' | 'hi' | 'mr';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
  // New: async translator that can use NLP fallback
  tAsync: (textOrKey: string) => Promise<string>;
  // New: translate arbitrary text (not just keys)
  translateText: (text: string) => Promise<string>;
}

const translations = {
  en: {
    tagline: 'Your Farming Companion',
    dashboard: 'Dashboard',
    chat: 'Chat',
    diagnosis: 'Diagnosis',
    prices: 'Prices',
    schemes: 'Schemes',
    profile: 'Profile',
    weather: 'Weather',
    // Dashboard translations
    welcome: 'Welcome, Rajesh!',
    farmStatus: 'Let\'s check your farm status today',
    todayEarning: 'Today\'s Earning',
    suggestions: 'Suggestions',
    temperature: 'Temperature',
    humidity: 'Humidity',
    rainfall: 'Rainfall',
    windSpeed: 'Wind Speed',
    myCrops: 'My Crops',
    rice: 'Rice',
    wheat: 'Wheat',
    corn: 'Corn',
    healthy: 'Healthy',
    attention: 'Needs Attention',
    days: 'days',
    // Weather alerts
    heavyRainAlert: 'Heavy rainfall expected in next 2 days',
    priceAlert: 'Tomato prices increased by 15% in local mandi',
    diseaseAlert: 'Leaf blight spotted in nearby farms',
    todayAlerts: 'Today\'s Alerts',
    // Additional UI elements
    viewDetails: 'View details →',
    home: 'Home',
    back: 'Back',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    cancel: 'Cancel',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    // ChatBot translations
    chatWelcome: 'Hello! I\'m your farming assistant. I can help you with crops, soil, weather, and all agriculture-related questions.',
    typeMessage: 'Type your message...',
    send: 'Send',
    listening: 'Listening...',
    aiMode: 'AI Assistant Mode',
    voiceInput: 'Voice Input',
    speakResponse: 'Speak Response',
    close: 'Close',
    // Crop Disease Detection
    cropDiagnosis: 'Crop Disease Detection',
    uploadImage: 'Upload Image',
    takePhoto: 'Take Photo',
    analyzeWithAI: 'Analyze with AI',
    analyzeNow: 'Analyze Now',
    cropCheckDescription: 'Check your crop health with AI assistance',
    analyzingCrop: 'Please wait, we are analyzing your crop',
    // Dashboard specific
    profileSummary: 'Profile Summary',
    phoneNumber: 'Phone Number',
    kccNumber: 'KCC Number',
    completeProfile: 'Complete your profile to see more information',
    cropsRegistered: 'crops registered',
    noCropsYet: 'No crops registered yet',
    addCropsInProfile: 'Add crops in your profile to see them here',
    excellent: 'Excellent',
    // Price Prediction
    pricePrediction: 'Price Prediction',
    marketPrices: 'Market Prices',
    selectCrop: 'Select Crop',
    selectMarket: 'Select Market',
    getPrediction: 'Get Prediction',
    currentPrice: 'Current Price',
    predictedPrice: 'Predicted Price',
    // Scheme Recommendations  
    governmentSchemes: 'Government Schemes',
    recommendedSchemes: 'Recommended Schemes',
    eligibilityCheck: 'Check Eligibility',
    applyNow: 'Apply Now',
    schemeDetails: 'Scheme Details',
    // Additional translations
    allSchemes: 'All Schemes',
    suitableSchemes: 'Suitable Schemes',
    allCrops: 'All Crops',
    todayPrice: 'Today\'s Price',
    totalCrops: 'Total Crops',
    schemesApplied: 'Schemes Applied',
    mainCrops: 'Main Crops',
    pmKisanScheme: 'PM-KISAN Scheme',
    mudraScheme: 'Mudra Scheme (Agriculture)',
    cropInsurance: 'Crop Insurance Scheme',
    kisanPension: 'Kisan Pension Scheme',
    // Profile translations
    settings: 'Settings',
    languageSettings: 'Language Settings',
    helpSupport: 'Help & Support',
    // Additional comprehensive translations
    lastUpdate: 'Last Update',
    updating: 'Updating...',
    refresh: 'Refresh',
    rajeshName: 'Rajesh Kumar Sharma',
    location: 'Village: Rampur, District: Meerut, Uttar Pradesh',
    uploadedImage: 'Uploaded Photo',
    analyzing: 'Analyzing...',
    results: 'Results',
    treatment: 'Treatment',
    prevention: 'Prevention',
    severity: 'Severity',
    // Enhanced scheme translations
    digitalServices: 'Digital Services',
    infrastructure: 'Infrastructure',
    additionalInformation: 'Additional Information',
    successRate: 'Success Rate',
    beneficiaries: 'Beneficiaries',
    officialWebsite: 'Official Website',
    landSizeMatch: 'Land size eligible',
    cropMatch: 'Crop match',
    quickProcessing: 'Quick processing',
    highSuccessRate: 'High success rate',
    popularScheme: 'Popular scheme',
    kccAvailable: 'KCC Available',
    incomeEligible: 'Income eligible',
    goodApprovalRate: 'Good approval rate',
    moderateProcessing: 'Moderate processing',
    highlyPopular: 'Highly popular',
    largebeneficiaryBase: 'Large beneficiary base',
    provenTrackRecord: 'Proven track record',
    // Government scheme links
    checkStatus: 'Check Status',
    applyOnline: 'Apply Online',
    insurancePortal: 'Insurance Portal',
    policyStatus: 'Policy Status',
    kccApplication: 'KCC Application',
    guidelines: 'Guidelines',
    registerNow: 'Register Now',
    fpoRegistration: 'FPO Registration',
    applyPortal: 'Apply Portal',
    mnrePortal: 'MNRE Portal',
    applicationForm: 'Application Form',
    trackApplication: 'Track Application',
    helplineNumber: 'Helpline Number',
    emailSupport: 'Email Support',
    high: 'High',
    medium: 'Medium',
    low: 'Low',
    marketAnalysis: 'Market Analysis',
    weeklyPrices: 'Weekly Prices',
    recommendations: 'Recommendations',
    eligibility: 'Eligibility',
    documents: 'Documents',
    deadline: 'Deadline',
    applicationStatus: 'Application Status',
    approved: 'Approved',
    applied: 'Applied',
    available: 'Available',
    mlDescription: 'Powered by machine learning algorithms - analyzing 1000+ data points including weather, demand, supply, and seasonal patterns.',
    aiAnalysis: 'AI Analysis',
    // Profile and common labels (added)
    member: 'Member',
    premium: 'Premium',
    paymentHistory: 'Payment History',
    logout: 'Logout',
    hindi: 'Hindi',
    marathi: 'Marathi',
    quickActions: 'Quick Actions',
    name: 'Name',
    mobileNumber: 'Mobile Number',
    email: 'Email',
    address: 'Address',
    landSize: 'Land Size',
    bankAccount: 'Bank Account',
    aadhaarNumber: 'Aadhaar Number',
    chatPlaceholder: 'Ask about farming...',
    // Weather-specific translations
    feelsLike: 'Feels like',
    pressure: 'Pressure',
    visibility: 'Visibility',
    uvIndex: 'UV Index',
    forecast: 'Forecast',
    refreshWeather: 'Refresh Weather',
    gettingLocation: 'Getting your location...',
    locationDenied: 'Location access denied',
    weatherUnavailable: 'Weather data unavailable',
    today: 'Today',
    tomorrow: 'Tomorrow',
    dayAfter: 'Day After',
    // Alert-specific translations
    alertsRefresh: 'Refresh Alerts',
    loadingAlerts: 'Loading alerts...',
    noAlerts: 'No alerts at this time',
    actionRequired: 'Action Required',
    // Camera-specific translations
    capturePhoto: 'Capture Photo',
    cameraAccess: 'Camera Access',
    focusCrop: 'Focus the crop here',
    captureInstruction: 'Position the diseased part of the crop within the frame and tap capture',
    capture: 'Capture'
  },
  hi: {
    tagline: 'आपका खेती का साथी',
    dashboard: 'डैशबोर्ड',
    chat: 'चैट',
    diagnosis: 'जांच',
    prices: 'भाव',
    schemes: 'योजनाएं',
    profile: 'प्रोफ़ाइल',
    weather: 'मौसम',
    // Dashboard translations
    welcome: 'नमस्कार, राजेश जी!',
    farmStatus: 'आज आपके खेत की स्थिति देखते हैं',
    todayEarning: 'आज की कमाई',
    suggestions: 'सुझाव',
    temperature: 'तापमान',
    humidity: 'नमी',
    rainfall: 'बारिश',
    windSpeed: 'हवा',
    myCrops: 'मेरी फसल',
    rice: 'धान',
    wheat: 'गेहूं',
    corn: 'मक्का',
    healthy: 'स्वस्थ',
    attention: 'ध्यान दें',
    days: 'दिन',
    // Weather alerts
    heavyRainAlert: 'अगले 2 दिनों में भारी बारिश की संभावना',
    priceAlert: 'स्थानीय मंडी में टमाटर की कीमत 15% बढ़ी',
    diseaseAlert: 'आसपास के खेतों में पत्ती झुलसा रोग देखा गया',
    todayAlerts: 'आज की चेतावनी',
    // Additional UI elements
    viewDetails: 'विस्तार से देखें →',
    home: 'मुख्य पृष्ठ',
    back: 'वापस',
    loading: 'लोड हो रहा है...',
    error: 'त्रुटि',
    success: 'सफलता',
    cancel: 'रद्द करें',
    save: 'सेव करें',
    delete: 'हटाएं',
    edit: 'संपादित करें',
    // ChatBot translations
    chatWelcome: 'नमस्कार! मैं आपका कृषि सहायक हूं। मैं फसल, मिट्टी, मौसम और कृषि से संबंधित सभी सवालों में आपकी मदद कर सकता हूं।',
    typeMessage: 'अपना संदेश लिखें...',
    send: 'भेजें',
    listening: 'सुन रहा हूं...',
    aiMode: 'AI सहायक मोड',
    voiceInput: 'वॉयस इनपुट',
    speakResponse: 'जवाब बोलें',
    close: 'बंद करें',
    // Crop Disease Detection
    cropDiagnosis: 'फसल रोग जांच',
    uploadImage: 'फोटो अपलोड करें',
    takePhoto: 'फोटो लें',
    analyzeWithAI: 'AI से जांच करें',
    analyzeNow: 'अभी जांच करें',
    cropCheckDescription: 'AI की मदद से फसल की स्वास्थ्य जांच करें',
    analyzingCrop: 'कृपया प्रतीक्षा करें, हम आपकी फसल की जांच कर रहे हैं',
    // Dashboard specific
    profileSummary: 'प्रोफ़ाइल सारांश',
    phoneNumber: 'फोन नंबर',
    kccNumber: 'KCC नंबर',
    completeProfile: 'अधिक जानकारी देखने के लिए अपनी प्रोफ़ाइल पूरी करें',
    cropsRegistered: 'फसलें पंजीकृत',
    noCropsYet: 'अभी तक कोई फसल पंजीकृत नहीं',
    addCropsInProfile: 'यहाँ देखने के लिए अपनी प्रोफ़ाइल में फसल जोड़ें',
    excellent: 'उत्कृष्ट',
    // Price Prediction
    pricePrediction: 'भाव पूर्वानुमान',
    marketPrices: 'मंडी भाव',
    selectCrop: 'फसल चुनें',
    selectMarket: 'मंडी चुनें',
    getPrediction: 'पूर्वानुमान प्राप्त करें',
    currentPrice: 'वर्तमान भाव',
    predictedPrice: 'अनुमानित भाव',
    // Scheme Recommendations  
    governmentSchemes: 'सरकारी योजनाएं',
    recommendedSchemes: 'सुझावित योजनाएं',
    eligibilityCheck: 'पात्रता जांच',
    applyNow: 'अभी आवेदन करें',
    schemeDetails: 'योजना विवरण',
    // Additional translations
    allSchemes: 'सभी योजनाएं',
    suitableSchemes: 'उपयुक्त योजनाएं',
    allCrops: 'सभी फसलें',
    todayPrice: 'आज का भाव',
    totalCrops: 'कुल फसल',
    schemesApplied: 'योजनाएं लागू',
    mainCrops: 'मुख्य फसलें',
    pmKisanScheme: 'PM-KISAN योजना',
    mudraScheme: 'मुद्रा योजना (कृषि)',
    cropInsurance: 'फसल बीमा योजना',
    kisanPension: 'किसान पेंशन योजना',
    // Profile translations
    settings: 'सेटिंग्स',
    languageSettings: 'भाषा सेटिंग्स',
    personalInfo: 'व्यक्तिगत जानकारी',
    farmDetails: 'खेत की जानकारी',
    notifications: 'सूचनाएं',
    helpSupport: 'सहायता और समर्थन',
    // Additional comprehensive translations
    lastUpdate: 'अंतिम अपडेट',
    updating: 'अपडेट हो रहा है...',
    refresh: 'रिफ्रेश करें',
    rajeshName: 'राजेश कुमार शर्मा',
    location: 'गांव: रामपुर, जिला: मेरठ, उत्तर प्रदेश',
    uploadedImage: 'अपलोड की गई फोटो',
    analyzing: 'विश्लेषण कर रहे हैं...',
    results: 'परिणाम',
    treatment: 'उपचार',
    prevention: 'बचाव',
    severity: 'गंभीरता',
    // Enhanced scheme translations
    digitalServices: 'डिजिटल सेवाएं',
    infrastructure: 'अवसंरचना',
    additionalInformation: 'अतिरिक्त जानकारी',
    successRate: 'सफलता दर',
    beneficiaries: 'लाभार्थी',
    officialWebsite: 'आधिकारिक वेबसाइट',
    landSizeMatch: 'भूमि आकार योग्य',
    cropMatch: 'फसल मिलान',
    quickProcessing: 'त्वरित प्रक्रिया',
    highSuccessRate: 'उच्च सफलता दर',
    popularScheme: 'लोकप्रिय योजना',
    kccAvailable: 'KCC उपलब्ध',
    incomeEligible: 'आय योग्य',
    goodApprovalRate: 'अच्छी स्वीकृति दर',
    moderateProcessing: 'मध्यम प्रक्रिया',
    highlyPopular: 'अत्यधिक लोकप्रिय',
    largebeneficiaryBase: 'बड़ा लाभार्थी आधार',
    provenTrackRecord: 'सिद्ध ट्रैक रिकॉर्ड',
    // Government scheme links
    checkStatus: 'स्थिति देखें',
    applyOnline: 'ऑनलाइन आवेदन',
    insurancePortal: 'बीमा पोर्टल',
    policyStatus: 'पॉलिसी स्थिति',
    kccApplication: 'KCC आवेदन',
    guidelines: 'दिशानिर्देश',
    registerNow: 'अभी पंजीकरण करें',
    fpoRegistration: 'FPO पंजीकरण',
    applyPortal: 'आवेदन पोर्टल',
    mnrePortal: 'MNRE पोर्टल',
    applicationForm: 'आवेदन फॉर्म',
    trackApplication: 'आवेदन ट्रैक करें',
    helplineNumber: 'हेल्पलाइन नंबर',
    emailSupport: 'ईमेल सहायता',
    high: 'उच्च',
    medium: 'मध्यम',
    low: 'कम',
    marketAnalysis: 'बाजार विश्लेषण',
    weeklyPrices: 'साप्ताहिक भाव',
    recommendations: 'सुझाव',
    eligibility: 'पात्रता',
    documents: 'दस्तावेज',
    deadline: 'अंतिम तारीख',
    applicationStatus: 'आवेदन की स्थिति',
    approved: 'स्वीकृत',
    applied: 'आवेदित',
    available: 'उपलब्ध',
    mlDescription: 'मशीन लर्निंग एल्गोरिदम से संचालित - मौसम, मांग, आपूर्ति और मौसमी पैटर्न सहित 1000+ डेटा पॉइंट्स का विश्लेषण।',
    aiAnalysis: 'AI विश्लेषण',
    // Profile and common labels (added)
    member: 'सदस्य',
    premium: 'प्रीमियम',
    paymentHistory: 'भुगतान इतिहास',
    logout: 'लॉग आउट',
    hindi: 'हिंदी',
    marathi: 'मराठी',
    quickActions: 'त्वरित क्रियाएं',
    name: 'नाम',
    mobileNumber: 'मोबाइल नंबर',
    email: 'ईमेल',
    address: 'पता',
    landSize: 'भूमि का आकार',
    bankAccount: 'बैंक खाता',
    aadhaarNumber: 'आधार नंबर',
    chatPlaceholder: 'खेती के बारे में पूछें...',
    // Weather-specific translations
    feelsLike: 'महसूस होता है',
    pressure: 'दबाव',
    visibility: 'दृश्यता',
    uvIndex: 'यूवी इंडेक्स',
    forecast: 'पूर्वानुमान',
    refreshWeather: 'मौसम अपडेट करें',
    gettingLocation: 'आपका स्थान प्राप्त कर रहे हैं...',
    locationDenied: 'स्थान की अनुमति नहीं मिली',
    weatherUnavailable: 'मौसम की जानकारी उपलब्ध नहीं',
    today: 'आज',
    tomorrow: 'कल',
    dayAfter: 'परसों',
    // Alert-specific translations
    alertsRefresh: 'अलर्ट रिफ्रेश करें',
    loadingAlerts: 'अलर्ट लोड हो रहे हैं...',
    noAlerts: 'इस समय कोई अलर्ट नहीं',
    actionRequired: 'कार्रवाई आवश्यक',
    // Camera-specific translations
    capturePhoto: 'फोटो कैप्चर करें',
    cameraAccess: 'कैमरा एक्सेस',
    focusCrop: 'फसल को यहाँ फोकस करें',
    captureInstruction: 'फसल के रोगग्रस्त हिस्से को फ्रेम में रखें और कैप्चर दबाएं',
    capture: 'कैप्चर'
  },
  mr: {
    tagline: 'तुमचा शेती साथी',
    dashboard: 'डॅशबोर्ड',
    chat: 'चॅट',
    diagnosis: 'तपासणी',
    prices: 'भाव',
    schemes: 'योजना',
    profile: 'प्रोफाइल',
    weather: 'हवामान',
    // Dashboard translations
    welcome: 'नमस्कार, राजेश जी!',
    farmStatus: 'आज तुमच्या शेताची स्थिती पाहूया',
    todayEarning: 'आजची कमाई',
    suggestions: 'सूचना',
    temperature: 'तापमान',
    humidity: 'आर्द्रता',
    rainfall: 'पाऊस',
    windSpeed: 'वारा',
    myCrops: 'माझी पिके',
    rice: 'भात',
    wheat: 'गहू',
    corn: 'मक्का',
    healthy: 'निरोगी',
    attention: 'लक्ष द्या',
    days: 'दिवस',
    // Weather alerts
    heavyRainAlert: 'पुढच्या २ दिवसांत मुसळधार पावसाची शक्यता',
    priceAlert: 'स्थानिक मंडीत टोमॅटोच्या किमती १५% वाढल्या',
    diseaseAlert: 'आजूबाजूच्या शेतात पर्ण कुजण्याचा रोग दिसला',
    todayAlerts: 'आजचे इशारे',
    // Additional UI elements
    viewDetails: 'तपशील पहा →',
    home: 'मुख्य पान',
    back: 'परत',
    loading: 'लोड होत आहे...',
    error: 'त्रुटी',
    success: 'यशस्वी',
    cancel: 'रद्द करा',
    save: 'जतन करा',
    delete: 'काढून टाका',
    edit: 'संपादित करा',
    // ChatBot translations
    chatWelcome: 'नमस्कार! मी तुमचा शेती सहाय्यक आहे. मी पिके, माती, हवामान आणि शेतीशी संबंधित सर्व प्रश्नांमध्ये मदत करू शकतो.',
    typeMessage: 'तुमचा संदेश लिहा...',
    send: 'पाठवा',
    listening: 'ऐकत आहे...',
    aiMode: 'AI सहाय्यक मोड',
    voiceInput: 'आवाज इनपुट',
    speakResponse: 'उत्तर बोला',
    close: 'बंद करा',
    // Crop Disease Detection
    cropDiagnosis: 'पिक रोग तपासणी',
    uploadImage: 'फोटो अपलोड करा',
    takePhoto: 'फोटो घ्या',
    analyzeWithAI: 'AI ने तपासा',
    analyzeNow: 'आता तपासा',
    cropCheckDescription: 'AI च्या मदतीने पिकांच्या आरोग्याची तपासणी करा',
    analyzingCrop: 'कृपया थांबा, आम्ही तुमच्या पिकाची तपासणी करत आहोत',
    // Dashboard specific
    profileSummary: 'प्रोफाइल सारांश',
    phoneNumber: 'फोन नंबर',
    kccNumber: 'KCC नंबर',
    completeProfile: 'अधिक माहिती पाहण्यासाठी तुमची प्रोफाइल पूर्ण करा',
    cropsRegistered: 'पिके नोंदणीकृत',
    noCropsYet: 'अजून कोणतीही पिके नोंदणीकृत नाहीत',
    addCropsInProfile: 'येथे पाहण्यासाठी तुमच्या प्रोफाइलमध्ये पिके जोडा',
    excellent: 'उत्कृष्ट',
    // Price Prediction
    pricePrediction: 'भाव अंदाज',
    marketPrices: 'मंडी भाव',
    selectCrop: 'पीक निवडा',
    selectMarket: 'मंडी निवडा',
    getPrediction: 'अंदाज मिळवा',
    currentPrice: 'सद्यस्थिती भाव',
    predictedPrice: 'अंदाजित भाव',
    // Scheme Recommendations  
    governmentSchemes: 'सरकारी योजना',
    recommendedSchemes: 'सुचविलेल्या योजना',
    eligibilityCheck: 'पात्रता तपासणी',
    applyNow: 'आता अर्ज करा',
    schemeDetails: 'योजना तपशील',
    // Additional translations
    allSchemes: 'सर्व योजना',
    suitableSchemes: 'योग्य योजना',
    allCrops: 'सर्व पिके',
    todayPrice: 'आजचे भाव',
    totalCrops: 'एकूण पिके',
    schemesApplied: 'लागू केलेल्या योजना',
    mainCrops: 'मुख्य पिके',
    pmKisanScheme: 'PM-KISAN योजना',
    mudraScheme: 'मुद्रा योजना (कृषी)',
    cropInsurance: 'पीक विमा योजना',
    kisanPension: 'शेतकरी पेन्शन योजना',
    // Profile translations
    settings: 'सेटिंग्स',
    languageSettings: 'भाषा सेटिंग्स',
    personalInfo: 'वैयक्तिक माहिती',
    farmDetails: 'शेत तपशील',
    notifications: 'सूचना',
    helpSupport: 'मदत आणि सहाय्य',
    // Additional comprehensive translations
    lastUpdate: 'शेवटचे अपडेट',
    updating: 'अपडेट होत आहे...',
    refresh: 'रिफ्रेश करा',
    rajeshName: 'राजेश कुमार शर्मा',
    location: 'गाव: रामपूर, जिल्हा: मेरठ, उत्तर प्रदेश',
    uploadedImage: 'अपलोड केलेला फोटो',
    analyzing: 'विश्लेषण करत आहे...',
    results: 'निकाल',
    treatment: 'उपचार',
    prevention: 'प्रतिबंध',
    severity: 'तीव्रता',
    // Enhanced scheme translations
    digitalServices: 'डिजिटल सेवा',
    infrastructure: 'पायाभूत सुविधा',
    additionalInformation: 'अतिरिक्त माहिती',
    successRate: 'यश दर',
    beneficiaries: 'लाभार्थी',
    officialWebsite: 'अधिकृत वेबसाइट',
    landSizeMatch: 'जमीन आकार पात्र',
    cropMatch: 'पीक जुळणी',
    quickProcessing: 'जलद प्रक्रिया',
    highSuccessRate: 'उच्च यश दर',
    popularScheme: 'लोकप्रिय योजना',
    kccAvailable: 'KCC उपलब्ध',
    incomeEligible: 'उत्पन्न पात्र',
    goodApprovalRate: 'चांगला मंजूरी दर',
    moderateProcessing: 'मध्यम प्रक्रिया',
    highlyPopular: 'अत्यंत लोकप्रिय',
    largebeneficiaryBase: 'मोठा लाभार्थी आधार',
    provenTrackRecord: 'सिद्ध ट्रॅक रेकॉर्ड',
    // Government scheme links
    checkStatus: 'स्थिती तपासा',
    applyOnline: 'ऑनलाइन अर्ज',
    insurancePortal: 'विमा पोर्टल',
    policyStatus: 'पॉलिसी स्थिती',
    kccApplication: 'KCC अर्ज',
    guidelines: 'मार्गदर्शन',
    registerNow: 'आता नोंदणी करा',
    fpoRegistration: 'FPO नोंदणी',
    applyPortal: 'अर्ज पोर्टल',
    mnrePortal: 'MNRE पोर्टल',
    applicationForm: 'अर्ज फॉर्म',
    trackApplication: 'अर्ज ट्रॅक करा',
    helplineNumber: 'हेल्पलाइन नंबर',
    emailSupport: 'ईमेल सहाय्य',
    high: 'उच्च',
    medium: 'मध्यम',
    low: 'कमी',
    marketAnalysis: 'बाजार विश्लेषण',
    weeklyPrices: 'साप्ताहिक भाव',
    recommendations: 'शिफारसी',
    eligibility: 'पात्रता',
    documents: 'कागदपत्रे',
    deadline: 'अंतिम दिनांक',
    applicationStatus: 'अर्जाची स्थिती',
    approved: 'मंजूर',
    applied: 'अर्ज केला',
    available: 'उपलब्ध',
    mlDescription: 'मशीन लर्निंग अल्गोरिदम द्वारे संचालित - हवामान, मागणी, पुरवठा आणि मौसमी पॅटर्नसह 1000+ डेटा पॉइंट्सचे विश्लेषण.',
    aiAnalysis: 'AI विश्लेषण',
    // Profile and common labels (added)
    member: 'सदस्य',
    premium: 'प्रीमियम',
    paymentHistory: 'पेमेंट इतिहास',
    logout: 'लॉग आउट',
    hindi: 'हिंदी',
    marathi: 'मराठी',
    quickActions: 'त्वरित क्रिया',
    name: 'नाव',
    mobileNumber: 'मोबाइल नंबर',
    email: 'ईमेल',
    address: 'पत्ता',
    landSize: 'जमिनीचा आकार',
    bankAccount: 'बँक खाते',
    aadhaarNumber: 'आधार क्रमांक',
    chatPlaceholder: 'शेतीबद्दल विचारा...',
    // Weather-specific translations
    feelsLike: 'वाटतं',
    pressure: 'दबाव',
    visibility: 'दृश्यता',
    uvIndex: 'यूव्ही इंडेक्स',
    forecast: 'अंदाज',
    refreshWeather: 'हवामान अपडेट करा',
    gettingLocation: 'तुमचे स्थान मिळवत आहे...',
    locationDenied: 'स्थानाची परवानगी नाकारली',
    weatherUnavailable: 'हवामानाची माहिती उपलब्ध नाही',
    today: 'आज',
    tomorrow: 'उद्या',
    dayAfter: 'परवा',
    // Alert-specific translations
    alertsRefresh: 'अलर्ट रिफ्रेश करा',
    loadingAlerts: 'अलर्ट लोड होत आहेत...',
    noAlerts: 'या वेळी कोणतेही अलर्ट नाहीत',
    actionRequired: 'कृती आवश्यक',
    // Camera-specific translations
    capturePhoto: 'फोटो कॅप्चर करा',
    cameraAccess: 'कॅमेरा प्रवेश',
    focusCrop: 'पीक येथे फोकस करा',
    captureInstruction: 'फसलाचा रोगग्रस्त भाग फ्रेममध्ये ठेवा आणि कॅप्चर दाबा',
    capture: 'कॅप्चर'
  }
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export { LanguageContext };

// Allow injecting an AI/NLP translation function from outside (e.g., server API)
export function LanguageProvider({
  children,
  aiTranslate
}: {
  children: ReactNode;
  aiTranslate?: (text: string, targetLang: Language, sourceLang?: string) => Promise<string>;
}) {
  const [language, setLanguage] = useState<Language>('en');
  const cacheRef = useRef<Record<string, string>>({});

  // Synchronous dictionary lookup with English fallback
  const t = (key: string): string => {
    const dict = translations as Record<Language, Record<string, string>>;
    const current = dict[language]?.[key];
    if (current) return current;
    const fallbackEn = dict.en?.[key];
    return fallbackEn ?? key;
  };
  
  // Asynchronous translator with optional AI fallback and cache
  const tAsync = async (textOrKey: string): Promise<string> => {
    // If key exists in dict or current language is English, return sync value
    const dictVal = t(textOrKey);
    if (dictVal !== textOrKey || language === 'en') return dictVal;

    // Otherwise, attempt AI translation (treat input as raw text)
    const cacheKey = `${language}::${textOrKey}`;
    if (cacheRef.current[cacheKey]) return cacheRef.current[cacheKey];
    if (!aiTranslate) return textOrKey;

    try {
      const translated = await aiTranslate(textOrKey, language, 'en');
      cacheRef.current[cacheKey] = translated;
      return translated;
    } catch {
      return textOrKey; // graceful fallback
    }
  };

  // Translate arbitrary text for current UI language
  const translateText = async (text: string): Promise<string> => {
    if (!text) return '';
    if (language === 'en') return text;
    return tAsync(text);
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t, tAsync, translateText }}>
      {children}
    </LanguageContext.Provider>
  );
}